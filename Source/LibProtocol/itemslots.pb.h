// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itemslots.proto

#ifndef PROTOBUF_itemslots_2eproto__INCLUDED
#define PROTOBUF_itemslots_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_itemslots_2eproto();
void protobuf_AssignDesc_itemslots_2eproto();
void protobuf_ShutdownFile_itemslots_2eproto();

class ItemBinaryData;
class ItemInfo;
class Itemslots;

// ===================================================================

class ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.ItemInfo) */ {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  inline ItemInfo* New() const { return New(NULL); }

  ItemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemnum = 2;
  bool has_itemnum() const;
  void clear_itemnum();
  static const int kItemnumFieldNumber = 2;
  ::google::protobuf::int32 itemnum() const;
  void set_itemnum(::google::protobuf::int32 value);

  // optional int32 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional int32 uniqueid = 4;
  bool has_uniqueid() const;
  void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  ::google::protobuf::int32 uniqueid() const;
  void set_uniqueid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.ItemInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemnum_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 uniqueid_;
  friend void  protobuf_AddDesc_itemslots_2eproto();
  friend void protobuf_AssignDesc_itemslots_2eproto();
  friend void protobuf_ShutdownFile_itemslots_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemBinaryData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.ItemBinaryData) */ {
 public:
  ItemBinaryData();
  virtual ~ItemBinaryData();

  ItemBinaryData(const ItemBinaryData& from);

  inline ItemBinaryData& operator=(const ItemBinaryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBinaryData& default_instance();

  void Swap(ItemBinaryData* other);

  // implements Message ----------------------------------------------

  inline ItemBinaryData* New() const { return New(NULL); }

  ItemBinaryData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemBinaryData& from);
  void MergeFrom(const ItemBinaryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemBinaryData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.ItemInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::protobuf::ItemInfo& items(int index) const;
  ::protobuf::ItemInfo* mutable_items(int index);
  ::protobuf::ItemInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::protobuf::ItemInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::ItemInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:protobuf.ItemBinaryData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::ItemInfo > items_;
  friend void  protobuf_AddDesc_itemslots_2eproto();
  friend void protobuf_AssignDesc_itemslots_2eproto();
  friend void protobuf_ShutdownFile_itemslots_2eproto();

  void InitAsDefaultInstance();
  static ItemBinaryData* default_instance_;
};
// -------------------------------------------------------------------

class Itemslots : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.Itemslots) */ {
 public:
  Itemslots();
  virtual ~Itemslots();

  Itemslots(const Itemslots& from);

  inline Itemslots& operator=(const Itemslots& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Itemslots& default_instance();

  void Swap(Itemslots* other);

  // implements Message ----------------------------------------------

  inline Itemslots* New() const { return New(NULL); }

  Itemslots* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Itemslots& from);
  void MergeFrom(const Itemslots& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Itemslots* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 char_id = 1;
  bool has_char_id() const;
  void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  ::google::protobuf::int64 char_id() const;
  void set_char_id(::google::protobuf::int64 value);

  // optional int32 capacity = 2;
  bool has_capacity() const;
  void clear_capacity();
  static const int kCapacityFieldNumber = 2;
  ::google::protobuf::int32 capacity() const;
  void set_capacity(::google::protobuf::int32 value);

  // optional int32 usecapacity = 3;
  bool has_usecapacity() const;
  void clear_usecapacity();
  static const int kUsecapacityFieldNumber = 3;
  ::google::protobuf::int32 usecapacity() const;
  void set_usecapacity(::google::protobuf::int32 value);

  // optional .protobuf.ItemBinaryData binary_data = 4;
  bool has_binary_data() const;
  void clear_binary_data();
  static const int kBinaryDataFieldNumber = 4;
  const ::protobuf::ItemBinaryData& binary_data() const;
  ::protobuf::ItemBinaryData* mutable_binary_data();
  ::protobuf::ItemBinaryData* release_binary_data();
  void set_allocated_binary_data(::protobuf::ItemBinaryData* binary_data);

  // @@protoc_insertion_point(class_scope:protobuf.Itemslots)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_capacity();
  inline void clear_has_capacity();
  inline void set_has_usecapacity();
  inline void clear_has_usecapacity();
  inline void set_has_binary_data();
  inline void clear_has_binary_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 char_id_;
  ::google::protobuf::int32 capacity_;
  ::google::protobuf::int32 usecapacity_;
  ::protobuf::ItemBinaryData* binary_data_;
  friend void  protobuf_AddDesc_itemslots_2eproto();
  friend void protobuf_AssignDesc_itemslots_2eproto();
  friend void protobuf_ShutdownFile_itemslots_2eproto();

  void InitAsDefaultInstance();
  static Itemslots* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemInfo

// optional int32 itemid = 1;
inline bool ItemInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ItemInfo::itemid() const {
  // @@protoc_insertion_point(field_get:protobuf.ItemInfo.itemid)
  return itemid_;
}
inline void ItemInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.ItemInfo.itemid)
}

// optional int32 itemnum = 2;
inline bool ItemInfo::has_itemnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_itemnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 ItemInfo::itemnum() const {
  // @@protoc_insertion_point(field_get:protobuf.ItemInfo.itemnum)
  return itemnum_;
}
inline void ItemInfo::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:protobuf.ItemInfo.itemnum)
}

// optional int32 index = 3;
inline bool ItemInfo::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ItemInfo::index() const {
  // @@protoc_insertion_point(field_get:protobuf.ItemInfo.index)
  return index_;
}
inline void ItemInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:protobuf.ItemInfo.index)
}

// optional int32 uniqueid = 4;
inline bool ItemInfo::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 ItemInfo::uniqueid() const {
  // @@protoc_insertion_point(field_get:protobuf.ItemInfo.uniqueid)
  return uniqueid_;
}
inline void ItemInfo::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.ItemInfo.uniqueid)
}

// -------------------------------------------------------------------

// ItemBinaryData

// repeated .protobuf.ItemInfo items = 1;
inline int ItemBinaryData::items_size() const {
  return items_.size();
}
inline void ItemBinaryData::clear_items() {
  items_.Clear();
}
inline const ::protobuf::ItemInfo& ItemBinaryData::items(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.ItemBinaryData.items)
  return items_.Get(index);
}
inline ::protobuf::ItemInfo* ItemBinaryData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.ItemBinaryData.items)
  return items_.Mutable(index);
}
inline ::protobuf::ItemInfo* ItemBinaryData::add_items() {
  // @@protoc_insertion_point(field_add:protobuf.ItemBinaryData.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::ItemInfo >*
ItemBinaryData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.ItemBinaryData.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::ItemInfo >&
ItemBinaryData::items() const {
  // @@protoc_insertion_point(field_list:protobuf.ItemBinaryData.items)
  return items_;
}

// -------------------------------------------------------------------

// Itemslots

// optional int64 char_id = 1;
inline bool Itemslots::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Itemslots::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Itemslots::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Itemslots::clear_char_id() {
  char_id_ = GOOGLE_LONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::int64 Itemslots::char_id() const {
  // @@protoc_insertion_point(field_get:protobuf.Itemslots.char_id)
  return char_id_;
}
inline void Itemslots::set_char_id(::google::protobuf::int64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Itemslots.char_id)
}

// optional int32 capacity = 2;
inline bool Itemslots::has_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Itemslots::set_has_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Itemslots::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Itemslots::clear_capacity() {
  capacity_ = 0;
  clear_has_capacity();
}
inline ::google::protobuf::int32 Itemslots::capacity() const {
  // @@protoc_insertion_point(field_get:protobuf.Itemslots.capacity)
  return capacity_;
}
inline void Itemslots::set_capacity(::google::protobuf::int32 value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Itemslots.capacity)
}

// optional int32 usecapacity = 3;
inline bool Itemslots::has_usecapacity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Itemslots::set_has_usecapacity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Itemslots::clear_has_usecapacity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Itemslots::clear_usecapacity() {
  usecapacity_ = 0;
  clear_has_usecapacity();
}
inline ::google::protobuf::int32 Itemslots::usecapacity() const {
  // @@protoc_insertion_point(field_get:protobuf.Itemslots.usecapacity)
  return usecapacity_;
}
inline void Itemslots::set_usecapacity(::google::protobuf::int32 value) {
  set_has_usecapacity();
  usecapacity_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Itemslots.usecapacity)
}

// optional .protobuf.ItemBinaryData binary_data = 4;
inline bool Itemslots::has_binary_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Itemslots::set_has_binary_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Itemslots::clear_has_binary_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Itemslots::clear_binary_data() {
  if (binary_data_ != NULL) binary_data_->::protobuf::ItemBinaryData::Clear();
  clear_has_binary_data();
}
inline const ::protobuf::ItemBinaryData& Itemslots::binary_data() const {
  // @@protoc_insertion_point(field_get:protobuf.Itemslots.binary_data)
  return binary_data_ != NULL ? *binary_data_ : *default_instance_->binary_data_;
}
inline ::protobuf::ItemBinaryData* Itemslots::mutable_binary_data() {
  set_has_binary_data();
  if (binary_data_ == NULL) {
    binary_data_ = new ::protobuf::ItemBinaryData;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.Itemslots.binary_data)
  return binary_data_;
}
inline ::protobuf::ItemBinaryData* Itemslots::release_binary_data() {
  // @@protoc_insertion_point(field_release:protobuf.Itemslots.binary_data)
  clear_has_binary_data();
  ::protobuf::ItemBinaryData* temp = binary_data_;
  binary_data_ = NULL;
  return temp;
}
inline void Itemslots::set_allocated_binary_data(::protobuf::ItemBinaryData* binary_data) {
  delete binary_data_;
  binary_data_ = binary_data;
  if (binary_data) {
    set_has_binary_data();
  } else {
    clear_has_binary_data();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Itemslots.binary_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_itemslots_2eproto__INCLUDED
