// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: character.proto

#ifndef PROTOBUF_character_2eproto__INCLUDED
#define PROTOBUF_character_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_character_2eproto();
void protobuf_AssignDesc_character_2eproto();
void protobuf_ShutdownFile_character_2eproto();

class Counter;
class CounterProto;
class MsgObject;
class RelChatMsg;
class RelChatProto;
class Relation;
class RelationProto;
class UserBinary;
class WsUser;

// ===================================================================

class Counter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.Counter) */ {
 public:
  Counter();
  virtual ~Counter();

  Counter(const Counter& from);

  inline Counter& operator=(const Counter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Counter& default_instance();

  void Swap(Counter* other);

  // implements Message ----------------------------------------------

  inline Counter* New() const { return New(NULL); }

  Counter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Counter& from);
  void MergeFrom(const Counter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Counter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemval = 2;
  bool has_itemval() const;
  void clear_itemval();
  static const int kItemvalFieldNumber = 2;
  ::google::protobuf::int32 itemval() const;
  void set_itemval(::google::protobuf::int32 value);

  // optional int32 starttime = 3;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStarttimeFieldNumber = 3;
  ::google::protobuf::int32 starttime() const;
  void set_starttime(::google::protobuf::int32 value);

  // optional int32 endtime = 4;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  ::google::protobuf::int32 endtime() const;
  void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.Counter)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemval();
  inline void clear_has_itemval();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemval_;
  ::google::protobuf::int32 starttime_;
  ::google::protobuf::int32 endtime_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static Counter* default_instance_;
};
// -------------------------------------------------------------------

class CounterProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.CounterProto) */ {
 public:
  CounterProto();
  virtual ~CounterProto();

  CounterProto(const CounterProto& from);

  inline CounterProto& operator=(const CounterProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterProto& default_instance();

  void Swap(CounterProto* other);

  // implements Message ----------------------------------------------

  inline CounterProto* New() const { return New(NULL); }

  CounterProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CounterProto& from);
  void MergeFrom(const CounterProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CounterProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.Counter counter = 1;
  int counter_size() const;
  void clear_counter();
  static const int kCounterFieldNumber = 1;
  const ::protobuf::Counter& counter(int index) const;
  ::protobuf::Counter* mutable_counter(int index);
  ::protobuf::Counter* add_counter();
  ::google::protobuf::RepeatedPtrField< ::protobuf::Counter >*
      mutable_counter();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::Counter >&
      counter() const;

  // @@protoc_insertion_point(class_scope:protobuf.CounterProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::Counter > counter_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static CounterProto* default_instance_;
};
// -------------------------------------------------------------------

class MsgObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MsgObject) */ {
 public:
  MsgObject();
  virtual ~MsgObject();

  MsgObject(const MsgObject& from);

  inline MsgObject& operator=(const MsgObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgObject& default_instance();

  void Swap(MsgObject* other);

  // implements Message ----------------------------------------------

  inline MsgObject* New() const { return New(NULL); }

  MsgObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgObject& from);
  void MergeFrom(const MsgObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string conent = 1;
  bool has_conent() const;
  void clear_conent();
  static const int kConentFieldNumber = 1;
  const ::std::string& conent() const;
  void set_conent(const ::std::string& value);
  void set_conent(const char* value);
  void set_conent(const char* value, size_t size);
  ::std::string* mutable_conent();
  ::std::string* release_conent();
  void set_allocated_conent(::std::string* conent);

  // @@protoc_insertion_point(class_scope:protobuf.MsgObject)
 private:
  inline void set_has_conent();
  inline void clear_has_conent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr conent_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static MsgObject* default_instance_;
};
// -------------------------------------------------------------------

class RelChatMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.RelChatMsg) */ {
 public:
  RelChatMsg();
  virtual ~RelChatMsg();

  RelChatMsg(const RelChatMsg& from);

  inline RelChatMsg& operator=(const RelChatMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelChatMsg& default_instance();

  void Swap(RelChatMsg* other);

  // implements Message ----------------------------------------------

  inline RelChatMsg* New() const { return New(NULL); }

  RelChatMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelChatMsg& from);
  void MergeFrom(const RelChatMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RelChatMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 msgid = 1;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // optional int64 senduid = 2;
  bool has_senduid() const;
  void clear_senduid();
  static const int kSenduidFieldNumber = 2;
  ::google::protobuf::int64 senduid() const;
  void set_senduid(::google::protobuf::int64 value);

  // optional string sendname = 3;
  bool has_sendname() const;
  void clear_sendname();
  static const int kSendnameFieldNumber = 3;
  const ::std::string& sendname() const;
  void set_sendname(const ::std::string& value);
  void set_sendname(const char* value);
  void set_sendname(const char* value, size_t size);
  ::std::string* mutable_sendname();
  ::std::string* release_sendname();
  void set_allocated_sendname(::std::string* sendname);

  // optional int64 recvuid = 4;
  bool has_recvuid() const;
  void clear_recvuid();
  static const int kRecvuidFieldNumber = 4;
  ::google::protobuf::int64 recvuid() const;
  void set_recvuid(::google::protobuf::int64 value);

  // optional string recvname = 5;
  bool has_recvname() const;
  void clear_recvname();
  static const int kRecvnameFieldNumber = 5;
  const ::std::string& recvname() const;
  void set_recvname(const ::std::string& value);
  void set_recvname(const char* value);
  void set_recvname(const char* value, size_t size);
  ::std::string* mutable_recvname();
  ::std::string* release_recvname();
  void set_allocated_recvname(::std::string* recvname);

  // optional int32 sendtime = 6;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendtimeFieldNumber = 6;
  ::google::protobuf::int32 sendtime() const;
  void set_sendtime(::google::protobuf::int32 value);

  // optional .protobuf.MsgObject msgobj = 7;
  bool has_msgobj() const;
  void clear_msgobj();
  static const int kMsgobjFieldNumber = 7;
  const ::protobuf::MsgObject& msgobj() const;
  ::protobuf::MsgObject* mutable_msgobj();
  ::protobuf::MsgObject* release_msgobj();
  void set_allocated_msgobj(::protobuf::MsgObject* msgobj);

  // @@protoc_insertion_point(class_scope:protobuf.RelChatMsg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_senduid();
  inline void clear_has_senduid();
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_recvuid();
  inline void clear_has_recvuid();
  inline void set_has_recvname();
  inline void clear_has_recvname();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_msgobj();
  inline void clear_has_msgobj();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int64 senduid_;
  ::google::protobuf::internal::ArenaStringPtr sendname_;
  ::google::protobuf::int64 recvuid_;
  ::google::protobuf::internal::ArenaStringPtr recvname_;
  ::protobuf::MsgObject* msgobj_;
  ::google::protobuf::int32 sendtime_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static RelChatMsg* default_instance_;
};
// -------------------------------------------------------------------

class RelChatProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.RelChatProto) */ {
 public:
  RelChatProto();
  virtual ~RelChatProto();

  RelChatProto(const RelChatProto& from);

  inline RelChatProto& operator=(const RelChatProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelChatProto& default_instance();

  void Swap(RelChatProto* other);

  // implements Message ----------------------------------------------

  inline RelChatProto* New() const { return New(NULL); }

  RelChatProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelChatProto& from);
  void MergeFrom(const RelChatProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RelChatProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.RelChatMsg msglist = 1;
  int msglist_size() const;
  void clear_msglist();
  static const int kMsglistFieldNumber = 1;
  const ::protobuf::RelChatMsg& msglist(int index) const;
  ::protobuf::RelChatMsg* mutable_msglist(int index);
  ::protobuf::RelChatMsg* add_msglist();
  ::google::protobuf::RepeatedPtrField< ::protobuf::RelChatMsg >*
      mutable_msglist();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::RelChatMsg >&
      msglist() const;

  // @@protoc_insertion_point(class_scope:protobuf.RelChatProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::RelChatMsg > msglist_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static RelChatProto* default_instance_;
};
// -------------------------------------------------------------------

class Relation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.Relation) */ {
 public:
  Relation();
  virtual ~Relation();

  Relation(const Relation& from);

  inline Relation& operator=(const Relation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Relation& default_instance();

  void Swap(Relation* other);

  // implements Message ----------------------------------------------

  inline Relation* New() const { return New(NULL); }

  Relation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Relation& from);
  void MergeFrom(const Relation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Relation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 rel = 3;
  bool has_rel() const;
  void clear_rel();
  static const int kRelFieldNumber = 3;
  ::google::protobuf::int32 rel() const;
  void set_rel(::google::protobuf::int32 value);

  // optional int32 createtime = 4;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreatetimeFieldNumber = 4;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional int32 dealreltime = 5;
  bool has_dealreltime() const;
  void clear_dealreltime();
  static const int kDealreltimeFieldNumber = 5;
  ::google::protobuf::int32 dealreltime() const;
  void set_dealreltime(::google::protobuf::int32 value);

  // optional .protobuf.RelChatProto relchat = 6;
  bool has_relchat() const;
  void clear_relchat();
  static const int kRelchatFieldNumber = 6;
  const ::protobuf::RelChatProto& relchat() const;
  ::protobuf::RelChatProto* mutable_relchat();
  ::protobuf::RelChatProto* release_relchat();
  void set_allocated_relchat(::protobuf::RelChatProto* relchat);

  // @@protoc_insertion_point(class_scope:protobuf.Relation)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_rel();
  inline void clear_has_rel();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_dealreltime();
  inline void clear_has_dealreltime();
  inline void set_has_relchat();
  inline void clear_has_relchat();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 rel_;
  ::google::protobuf::int32 createtime_;
  ::protobuf::RelChatProto* relchat_;
  ::google::protobuf::int32 dealreltime_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static Relation* default_instance_;
};
// -------------------------------------------------------------------

class RelationProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.RelationProto) */ {
 public:
  RelationProto();
  virtual ~RelationProto();

  RelationProto(const RelationProto& from);

  inline RelationProto& operator=(const RelationProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationProto& default_instance();

  void Swap(RelationProto* other);

  // implements Message ----------------------------------------------

  inline RelationProto* New() const { return New(NULL); }

  RelationProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationProto& from);
  void MergeFrom(const RelationProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RelationProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.Relation relation = 1;
  int relation_size() const;
  void clear_relation();
  static const int kRelationFieldNumber = 1;
  const ::protobuf::Relation& relation(int index) const;
  ::protobuf::Relation* mutable_relation(int index);
  ::protobuf::Relation* add_relation();
  ::google::protobuf::RepeatedPtrField< ::protobuf::Relation >*
      mutable_relation();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::Relation >&
      relation() const;

  // @@protoc_insertion_point(class_scope:protobuf.RelationProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::Relation > relation_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static RelationProto* default_instance_;
};
// -------------------------------------------------------------------

class UserBinary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.UserBinary) */ {
 public:
  UserBinary();
  virtual ~UserBinary();

  UserBinary(const UserBinary& from);

  inline UserBinary& operator=(const UserBinary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBinary& default_instance();

  void Swap(UserBinary* other);

  // implements Message ----------------------------------------------

  inline UserBinary* New() const { return New(NULL); }

  UserBinary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBinary& from);
  void MergeFrom(const UserBinary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserBinary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protobuf.CounterProto counters = 1;
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 1;
  const ::protobuf::CounterProto& counters() const;
  ::protobuf::CounterProto* mutable_counters();
  ::protobuf::CounterProto* release_counters();
  void set_allocated_counters(::protobuf::CounterProto* counters);

  // optional .protobuf.RelationProto relations = 3;
  bool has_relations() const;
  void clear_relations();
  static const int kRelationsFieldNumber = 3;
  const ::protobuf::RelationProto& relations() const;
  ::protobuf::RelationProto* mutable_relations();
  ::protobuf::RelationProto* release_relations();
  void set_allocated_relations(::protobuf::RelationProto* relations);

  // @@protoc_insertion_point(class_scope:protobuf.UserBinary)
 private:
  inline void set_has_counters();
  inline void clear_has_counters();
  inline void set_has_relations();
  inline void clear_has_relations();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::protobuf::CounterProto* counters_;
  ::protobuf::RelationProto* relations_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static UserBinary* default_instance_;
};
// -------------------------------------------------------------------

class WsUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.WsUser) */ {
 public:
  WsUser();
  virtual ~WsUser();

  WsUser(const WsUser& from);

  inline WsUser& operator=(const WsUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WsUser& default_instance();

  void Swap(WsUser* other);

  // implements Message ----------------------------------------------

  inline WsUser* New() const { return New(NULL); }

  WsUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WsUser& from);
  void MergeFrom(const WsUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WsUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 char_id = 1;
  bool has_char_id() const;
  void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  ::google::protobuf::int64 char_id() const;
  void set_char_id(::google::protobuf::int64 value);

  // optional int64 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int64 account_id() const;
  void set_account_id(::google::protobuf::int64 value);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.WsUser)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 char_id_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static WsUser* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Counter

// optional int32 itemid = 1;
inline bool Counter::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Counter::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Counter::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Counter::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Counter::itemid() const {
  // @@protoc_insertion_point(field_get:protobuf.Counter.itemid)
  return itemid_;
}
inline void Counter::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Counter.itemid)
}

// optional int32 itemval = 2;
inline bool Counter::has_itemval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Counter::set_has_itemval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Counter::clear_has_itemval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Counter::clear_itemval() {
  itemval_ = 0;
  clear_has_itemval();
}
inline ::google::protobuf::int32 Counter::itemval() const {
  // @@protoc_insertion_point(field_get:protobuf.Counter.itemval)
  return itemval_;
}
inline void Counter::set_itemval(::google::protobuf::int32 value) {
  set_has_itemval();
  itemval_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Counter.itemval)
}

// optional int32 starttime = 3;
inline bool Counter::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Counter::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Counter::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Counter::clear_starttime() {
  starttime_ = 0;
  clear_has_starttime();
}
inline ::google::protobuf::int32 Counter::starttime() const {
  // @@protoc_insertion_point(field_get:protobuf.Counter.starttime)
  return starttime_;
}
inline void Counter::set_starttime(::google::protobuf::int32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Counter.starttime)
}

// optional int32 endtime = 4;
inline bool Counter::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Counter::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Counter::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Counter::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 Counter::endtime() const {
  // @@protoc_insertion_point(field_get:protobuf.Counter.endtime)
  return endtime_;
}
inline void Counter::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Counter.endtime)
}

// -------------------------------------------------------------------

// CounterProto

// repeated .protobuf.Counter counter = 1;
inline int CounterProto::counter_size() const {
  return counter_.size();
}
inline void CounterProto::clear_counter() {
  counter_.Clear();
}
inline const ::protobuf::Counter& CounterProto::counter(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.CounterProto.counter)
  return counter_.Get(index);
}
inline ::protobuf::Counter* CounterProto::mutable_counter(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.CounterProto.counter)
  return counter_.Mutable(index);
}
inline ::protobuf::Counter* CounterProto::add_counter() {
  // @@protoc_insertion_point(field_add:protobuf.CounterProto.counter)
  return counter_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::Counter >*
CounterProto::mutable_counter() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.CounterProto.counter)
  return &counter_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Counter >&
CounterProto::counter() const {
  // @@protoc_insertion_point(field_list:protobuf.CounterProto.counter)
  return counter_;
}

// -------------------------------------------------------------------

// MsgObject

// optional string conent = 1;
inline bool MsgObject::has_conent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgObject::set_has_conent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgObject::clear_has_conent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgObject::clear_conent() {
  conent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_conent();
}
inline const ::std::string& MsgObject::conent() const {
  // @@protoc_insertion_point(field_get:protobuf.MsgObject.conent)
  return conent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgObject::set_conent(const ::std::string& value) {
  set_has_conent();
  conent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MsgObject.conent)
}
inline void MsgObject::set_conent(const char* value) {
  set_has_conent();
  conent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MsgObject.conent)
}
inline void MsgObject::set_conent(const char* value, size_t size) {
  set_has_conent();
  conent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MsgObject.conent)
}
inline ::std::string* MsgObject::mutable_conent() {
  set_has_conent();
  // @@protoc_insertion_point(field_mutable:protobuf.MsgObject.conent)
  return conent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgObject::release_conent() {
  // @@protoc_insertion_point(field_release:protobuf.MsgObject.conent)
  clear_has_conent();
  return conent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgObject::set_allocated_conent(::std::string* conent) {
  if (conent != NULL) {
    set_has_conent();
  } else {
    clear_has_conent();
  }
  conent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conent);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MsgObject.conent)
}

// -------------------------------------------------------------------

// RelChatMsg

// optional int64 msgid = 1;
inline bool RelChatMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelChatMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelChatMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelChatMsg::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
  clear_has_msgid();
}
inline ::google::protobuf::int64 RelChatMsg::msgid() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.msgid)
  return msgid_;
}
inline void RelChatMsg::set_msgid(::google::protobuf::int64 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelChatMsg.msgid)
}

// optional int64 senduid = 2;
inline bool RelChatMsg::has_senduid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelChatMsg::set_has_senduid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelChatMsg::clear_has_senduid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelChatMsg::clear_senduid() {
  senduid_ = GOOGLE_LONGLONG(0);
  clear_has_senduid();
}
inline ::google::protobuf::int64 RelChatMsg::senduid() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.senduid)
  return senduid_;
}
inline void RelChatMsg::set_senduid(::google::protobuf::int64 value) {
  set_has_senduid();
  senduid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelChatMsg.senduid)
}

// optional string sendname = 3;
inline bool RelChatMsg::has_sendname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelChatMsg::set_has_sendname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelChatMsg::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelChatMsg::clear_sendname() {
  sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendname();
}
inline const ::std::string& RelChatMsg::sendname() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.sendname)
  return sendname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RelChatMsg::set_sendname(const ::std::string& value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.RelChatMsg.sendname)
}
inline void RelChatMsg::set_sendname(const char* value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.RelChatMsg.sendname)
}
inline void RelChatMsg::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.RelChatMsg.sendname)
}
inline ::std::string* RelChatMsg::mutable_sendname() {
  set_has_sendname();
  // @@protoc_insertion_point(field_mutable:protobuf.RelChatMsg.sendname)
  return sendname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RelChatMsg::release_sendname() {
  // @@protoc_insertion_point(field_release:protobuf.RelChatMsg.sendname)
  clear_has_sendname();
  return sendname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RelChatMsg::set_allocated_sendname(::std::string* sendname) {
  if (sendname != NULL) {
    set_has_sendname();
  } else {
    clear_has_sendname();
  }
  sendname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendname);
  // @@protoc_insertion_point(field_set_allocated:protobuf.RelChatMsg.sendname)
}

// optional int64 recvuid = 4;
inline bool RelChatMsg::has_recvuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RelChatMsg::set_has_recvuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RelChatMsg::clear_has_recvuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RelChatMsg::clear_recvuid() {
  recvuid_ = GOOGLE_LONGLONG(0);
  clear_has_recvuid();
}
inline ::google::protobuf::int64 RelChatMsg::recvuid() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.recvuid)
  return recvuid_;
}
inline void RelChatMsg::set_recvuid(::google::protobuf::int64 value) {
  set_has_recvuid();
  recvuid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelChatMsg.recvuid)
}

// optional string recvname = 5;
inline bool RelChatMsg::has_recvname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RelChatMsg::set_has_recvname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RelChatMsg::clear_has_recvname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RelChatMsg::clear_recvname() {
  recvname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recvname();
}
inline const ::std::string& RelChatMsg::recvname() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.recvname)
  return recvname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RelChatMsg::set_recvname(const ::std::string& value) {
  set_has_recvname();
  recvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.RelChatMsg.recvname)
}
inline void RelChatMsg::set_recvname(const char* value) {
  set_has_recvname();
  recvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.RelChatMsg.recvname)
}
inline void RelChatMsg::set_recvname(const char* value, size_t size) {
  set_has_recvname();
  recvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.RelChatMsg.recvname)
}
inline ::std::string* RelChatMsg::mutable_recvname() {
  set_has_recvname();
  // @@protoc_insertion_point(field_mutable:protobuf.RelChatMsg.recvname)
  return recvname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RelChatMsg::release_recvname() {
  // @@protoc_insertion_point(field_release:protobuf.RelChatMsg.recvname)
  clear_has_recvname();
  return recvname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RelChatMsg::set_allocated_recvname(::std::string* recvname) {
  if (recvname != NULL) {
    set_has_recvname();
  } else {
    clear_has_recvname();
  }
  recvname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recvname);
  // @@protoc_insertion_point(field_set_allocated:protobuf.RelChatMsg.recvname)
}

// optional int32 sendtime = 6;
inline bool RelChatMsg::has_sendtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RelChatMsg::set_has_sendtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RelChatMsg::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RelChatMsg::clear_sendtime() {
  sendtime_ = 0;
  clear_has_sendtime();
}
inline ::google::protobuf::int32 RelChatMsg::sendtime() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.sendtime)
  return sendtime_;
}
inline void RelChatMsg::set_sendtime(::google::protobuf::int32 value) {
  set_has_sendtime();
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelChatMsg.sendtime)
}

// optional .protobuf.MsgObject msgobj = 7;
inline bool RelChatMsg::has_msgobj() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RelChatMsg::set_has_msgobj() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RelChatMsg::clear_has_msgobj() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RelChatMsg::clear_msgobj() {
  if (msgobj_ != NULL) msgobj_->::protobuf::MsgObject::Clear();
  clear_has_msgobj();
}
inline const ::protobuf::MsgObject& RelChatMsg::msgobj() const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatMsg.msgobj)
  return msgobj_ != NULL ? *msgobj_ : *default_instance_->msgobj_;
}
inline ::protobuf::MsgObject* RelChatMsg::mutable_msgobj() {
  set_has_msgobj();
  if (msgobj_ == NULL) {
    msgobj_ = new ::protobuf::MsgObject;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.RelChatMsg.msgobj)
  return msgobj_;
}
inline ::protobuf::MsgObject* RelChatMsg::release_msgobj() {
  // @@protoc_insertion_point(field_release:protobuf.RelChatMsg.msgobj)
  clear_has_msgobj();
  ::protobuf::MsgObject* temp = msgobj_;
  msgobj_ = NULL;
  return temp;
}
inline void RelChatMsg::set_allocated_msgobj(::protobuf::MsgObject* msgobj) {
  delete msgobj_;
  msgobj_ = msgobj;
  if (msgobj) {
    set_has_msgobj();
  } else {
    clear_has_msgobj();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.RelChatMsg.msgobj)
}

// -------------------------------------------------------------------

// RelChatProto

// repeated .protobuf.RelChatMsg msglist = 1;
inline int RelChatProto::msglist_size() const {
  return msglist_.size();
}
inline void RelChatProto::clear_msglist() {
  msglist_.Clear();
}
inline const ::protobuf::RelChatMsg& RelChatProto::msglist(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.RelChatProto.msglist)
  return msglist_.Get(index);
}
inline ::protobuf::RelChatMsg* RelChatProto::mutable_msglist(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.RelChatProto.msglist)
  return msglist_.Mutable(index);
}
inline ::protobuf::RelChatMsg* RelChatProto::add_msglist() {
  // @@protoc_insertion_point(field_add:protobuf.RelChatProto.msglist)
  return msglist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::RelChatMsg >*
RelChatProto::mutable_msglist() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.RelChatProto.msglist)
  return &msglist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::RelChatMsg >&
RelChatProto::msglist() const {
  // @@protoc_insertion_point(field_list:protobuf.RelChatProto.msglist)
  return msglist_;
}

// -------------------------------------------------------------------

// Relation

// optional int64 uid = 1;
inline bool Relation::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Relation::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Relation::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Relation::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Relation::uid() const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.uid)
  return uid_;
}
inline void Relation::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Relation.uid)
}

// optional string name = 2;
inline bool Relation::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Relation::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Relation::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Relation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Relation::name() const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.Relation.name)
}
inline void Relation::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.Relation.name)
}
inline void Relation::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.Relation.name)
}
inline ::std::string* Relation::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.Relation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Relation::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.Relation.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Relation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.Relation.name)
}

// optional int32 rel = 3;
inline bool Relation::has_rel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Relation::set_has_rel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Relation::clear_has_rel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Relation::clear_rel() {
  rel_ = 0;
  clear_has_rel();
}
inline ::google::protobuf::int32 Relation::rel() const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.rel)
  return rel_;
}
inline void Relation::set_rel(::google::protobuf::int32 value) {
  set_has_rel();
  rel_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Relation.rel)
}

// optional int32 createtime = 4;
inline bool Relation::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Relation::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Relation::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Relation::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 Relation::createtime() const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.createtime)
  return createtime_;
}
inline void Relation::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Relation.createtime)
}

// optional int32 dealreltime = 5;
inline bool Relation::has_dealreltime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Relation::set_has_dealreltime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Relation::clear_has_dealreltime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Relation::clear_dealreltime() {
  dealreltime_ = 0;
  clear_has_dealreltime();
}
inline ::google::protobuf::int32 Relation::dealreltime() const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.dealreltime)
  return dealreltime_;
}
inline void Relation::set_dealreltime(::google::protobuf::int32 value) {
  set_has_dealreltime();
  dealreltime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Relation.dealreltime)
}

// optional .protobuf.RelChatProto relchat = 6;
inline bool Relation::has_relchat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Relation::set_has_relchat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Relation::clear_has_relchat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Relation::clear_relchat() {
  if (relchat_ != NULL) relchat_->::protobuf::RelChatProto::Clear();
  clear_has_relchat();
}
inline const ::protobuf::RelChatProto& Relation::relchat() const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.relchat)
  return relchat_ != NULL ? *relchat_ : *default_instance_->relchat_;
}
inline ::protobuf::RelChatProto* Relation::mutable_relchat() {
  set_has_relchat();
  if (relchat_ == NULL) {
    relchat_ = new ::protobuf::RelChatProto;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.Relation.relchat)
  return relchat_;
}
inline ::protobuf::RelChatProto* Relation::release_relchat() {
  // @@protoc_insertion_point(field_release:protobuf.Relation.relchat)
  clear_has_relchat();
  ::protobuf::RelChatProto* temp = relchat_;
  relchat_ = NULL;
  return temp;
}
inline void Relation::set_allocated_relchat(::protobuf::RelChatProto* relchat) {
  delete relchat_;
  relchat_ = relchat;
  if (relchat) {
    set_has_relchat();
  } else {
    clear_has_relchat();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Relation.relchat)
}

// -------------------------------------------------------------------

// RelationProto

// repeated .protobuf.Relation relation = 1;
inline int RelationProto::relation_size() const {
  return relation_.size();
}
inline void RelationProto::clear_relation() {
  relation_.Clear();
}
inline const ::protobuf::Relation& RelationProto::relation(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.RelationProto.relation)
  return relation_.Get(index);
}
inline ::protobuf::Relation* RelationProto::mutable_relation(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.RelationProto.relation)
  return relation_.Mutable(index);
}
inline ::protobuf::Relation* RelationProto::add_relation() {
  // @@protoc_insertion_point(field_add:protobuf.RelationProto.relation)
  return relation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::Relation >*
RelationProto::mutable_relation() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.RelationProto.relation)
  return &relation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Relation >&
RelationProto::relation() const {
  // @@protoc_insertion_point(field_list:protobuf.RelationProto.relation)
  return relation_;
}

// -------------------------------------------------------------------

// UserBinary

// optional .protobuf.CounterProto counters = 1;
inline bool UserBinary::has_counters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBinary::set_has_counters() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBinary::clear_has_counters() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBinary::clear_counters() {
  if (counters_ != NULL) counters_->::protobuf::CounterProto::Clear();
  clear_has_counters();
}
inline const ::protobuf::CounterProto& UserBinary::counters() const {
  // @@protoc_insertion_point(field_get:protobuf.UserBinary.counters)
  return counters_ != NULL ? *counters_ : *default_instance_->counters_;
}
inline ::protobuf::CounterProto* UserBinary::mutable_counters() {
  set_has_counters();
  if (counters_ == NULL) {
    counters_ = new ::protobuf::CounterProto;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.UserBinary.counters)
  return counters_;
}
inline ::protobuf::CounterProto* UserBinary::release_counters() {
  // @@protoc_insertion_point(field_release:protobuf.UserBinary.counters)
  clear_has_counters();
  ::protobuf::CounterProto* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline void UserBinary::set_allocated_counters(::protobuf::CounterProto* counters) {
  delete counters_;
  counters_ = counters;
  if (counters) {
    set_has_counters();
  } else {
    clear_has_counters();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.UserBinary.counters)
}

// optional .protobuf.RelationProto relations = 3;
inline bool UserBinary::has_relations() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBinary::set_has_relations() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBinary::clear_has_relations() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBinary::clear_relations() {
  if (relations_ != NULL) relations_->::protobuf::RelationProto::Clear();
  clear_has_relations();
}
inline const ::protobuf::RelationProto& UserBinary::relations() const {
  // @@protoc_insertion_point(field_get:protobuf.UserBinary.relations)
  return relations_ != NULL ? *relations_ : *default_instance_->relations_;
}
inline ::protobuf::RelationProto* UserBinary::mutable_relations() {
  set_has_relations();
  if (relations_ == NULL) {
    relations_ = new ::protobuf::RelationProto;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.UserBinary.relations)
  return relations_;
}
inline ::protobuf::RelationProto* UserBinary::release_relations() {
  // @@protoc_insertion_point(field_release:protobuf.UserBinary.relations)
  clear_has_relations();
  ::protobuf::RelationProto* temp = relations_;
  relations_ = NULL;
  return temp;
}
inline void UserBinary::set_allocated_relations(::protobuf::RelationProto* relations) {
  delete relations_;
  relations_ = relations;
  if (relations) {
    set_has_relations();
  } else {
    clear_has_relations();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.UserBinary.relations)
}

// -------------------------------------------------------------------

// WsUser

// optional int64 char_id = 1;
inline bool WsUser::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WsUser::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WsUser::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WsUser::clear_char_id() {
  char_id_ = GOOGLE_LONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::int64 WsUser::char_id() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.char_id)
  return char_id_;
}
inline void WsUser::set_char_id(::google::protobuf::int64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.char_id)
}

// optional int64 account_id = 2;
inline bool WsUser::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WsUser::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WsUser::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WsUser::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 WsUser::account_id() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.account_id)
  return account_id_;
}
inline void WsUser::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.account_id)
}

// optional string name = 3;
inline bool WsUser::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WsUser::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WsUser::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WsUser::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& WsUser::name() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WsUser::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.WsUser.name)
}
inline void WsUser::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.WsUser.name)
}
inline void WsUser::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.WsUser.name)
}
inline ::std::string* WsUser::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.WsUser.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WsUser::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.WsUser.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WsUser::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.WsUser.name)
}

// optional int32 type = 4;
inline bool WsUser::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WsUser::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WsUser::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WsUser::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WsUser::type() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.type)
  return type_;
}
inline void WsUser::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.type)
}

// optional int32 level = 5;
inline bool WsUser::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WsUser::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WsUser::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WsUser::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WsUser::level() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.level)
  return level_;
}
inline void WsUser::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.level)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_character_2eproto__INCLUDED
